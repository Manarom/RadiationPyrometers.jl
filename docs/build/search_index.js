var documenterSearchIndex = {"docs":
[{"location":"pyrometers/#Module-with-various-partical-radiation-pyrometers-types-and-several-function-like-pyrometer's-emissivity-adjusting-to-make-the-\"measured\"-temperature-fit-the-real-temperture","page":"RadiationPyrometers","title":"Module with various partical radiation pyrometers types and several function like pyrometer's emissivity adjusting to make the \"measured\" temperature fit the real temperture","text":"","category":"section"},{"location":"pyrometers/#RadiationPyrometers.DefaultPyrometersTypes","page":"RadiationPyrometers","title":"RadiationPyrometers.DefaultPyrometersTypes","text":"Default pyrometers types\n\n\n\n\n\n","category":"constant"},{"location":"pyrometers/#Base.isless-Tuple{Pyrometer, Pyrometer}","page":"RadiationPyrometers","title":"Base.isless","text":"Base.isless(p1::Pyrometer,p2::Pyrometer)\n\nVector of Pyrometer objects can be sorted using isless\n\n\n\n\n\n","category":"method"},{"location":"pyrometers/#RadiationPyrometers.fit_ϵ!-Tuple{Pyrometer, Float64, Float64}","page":"RadiationPyrometers","title":"RadiationPyrometers.fit_ϵ!","text":"fit_ϵ!(p::Pyrometer,Tmeasured::Float64,Treal::Float64)\n\nOptimizes the emissivity of the pyrometer to make measured by the pyrometer temperature fit\nfit the real temperature\n\nInput:\np - pyrometer object\nTreal - real temperature of the surface, Kelvins\nTmeasured - temperature measured by the pyrometer, Kelvins\n\n\n\n\n\n","category":"method"},{"location":"pyrometers/#RadiationPyrometers.fit_ϵ!-Tuple{Vector{Pyrometer}, Float64, Vector{Float64}}","page":"RadiationPyrometers","title":"RadiationPyrometers.fit_ϵ!","text":"fit_ϵ!(p::Vector{Pyrometer},Treal::Float64,Tmeasured::Vector{Float64})\n\nFits the emissivity of pyrometers to make measured temperature Tmeasured fit fit the real temperature Treal\n\nInput: p - pyrometer objects vector , [Nx0] Treal - real temperature of the surface, Kelvins Tmeasured - temperatures measured by the pyrometers, in Kelvins, [Nx0]\n\n\n\n\n\n","category":"method"},{"location":"pyrometers/#RadiationPyrometers.fit_ϵ_wavelength!-Tuple{Pyrometer, Float64, Float64}","page":"RadiationPyrometers","title":"RadiationPyrometers.fit_ϵ_wavelength!","text":"fit_ϵ_wavelength!(p::Pyrometer,Tmeasured::Float64,Treal::Float64)\n\nFits emissivity and returns it as a vector of the same size as pyrometer's wavelength region\nSome pyrometers has 2-wavelength, other work on a single wavelength, for two-wavelength pyrometers\ne_out will be a two-element vector\nInput:\n    p - pyrometer object\n    Tmeasured - temperature measured by the pyrometer, Kelvins\n    Treal - real temeprature of the surface, Kelvins\n\n\n\n\n\n","category":"method"},{"location":"pyrometers/#RadiationPyrometers.fit_ϵ_wavelength!-Tuple{Vector{Pyrometer}, Float64, Vector{Float64}}","page":"RadiationPyrometers","title":"RadiationPyrometers.fit_ϵ_wavelength!","text":"fit_ϵ_wavelength!(p::Vector{Pyrometer},Treal::Float64,Tmeasured::Vector{Float64})\n\nThe same as fit_ϵ! except that returns the vector of fitted emissivities  of the length as the total number of wavelength in all pyrometers in p\n\n\n\n\n\n","category":"method"},{"location":"pyrometers/#RadiationPyrometers.full_wavelength_range-Tuple{}","page":"RadiationPyrometers","title":"RadiationPyrometers.full_wavelength_range","text":"full_wavelength_range()\n\nCreates the wavelengths vector covered by default pyrometers see DefaultPyrometersTypes \n\n\n\n\n\n","category":"method"},{"location":"pyrometers/#RadiationPyrometers.is_narrow_band-Tuple{Pyrometer}","page":"RadiationPyrometers","title":"RadiationPyrometers.is_narrow_band","text":"is_narrow_band(p::Pyrometer)\n\nTrue if pyrometer p is a narrow-band pyrometer (worsk on a fixed wavelengh region)\n\n\n\n\n\n","category":"method"},{"location":"pyrometers/#RadiationPyrometers.measure-Tuple{Pyrometer, Float64}","page":"RadiationPyrometers","title":"RadiationPyrometers.measure","text":"measure(p::Pyrometer,i::Float64)\n\nCalculates the \"measured\" temperature from \"mesaured\" intensity by fitting the Planck function. The intensity units should be consistent with PlanckFunctions.ibb(λ,T) function for single wavelength pyrometer  and with PlanckFunctions.bandpower(λ,T), it should be in [W/m²⋅sr⋅μm] Input: p - pyrometer object i - measured intensity in [W/(m²⋅sr⋅μm)] or integral (over wavelength spectral intensity) in [W/(m²⋅sr)]  returns the temperature \"measured\" by this pyrometer   (optional) Tstarting  - starting temperature value\n\n\n\n\n\n","category":"method"},{"location":"pyrometers/#RadiationPyrometers.produce_pyrometers-Tuple{}","page":"RadiationPyrometers","title":"RadiationPyrometers.produce_pyrometers","text":"produce_pyrometers()\n\nCreates the vector of all supported pyrometers \n\n\n\n\n\n","category":"method"},{"location":"pyrometers/#RadiationPyrometers.set_emissivity-Tuple{Pyrometer, Float64}","page":"RadiationPyrometers","title":"RadiationPyrometers.set_emissivity","text":"set_emissivity(p::Pyrometer,em_value::Float64)\n\nSetter for spectral emissivity\n\n\n\n\n\n","category":"method"},{"location":"pyrometers/#RadiationPyrometers.switch_the_type-Tuple{Float64}","page":"RadiationPyrometers","title":"RadiationPyrometers.switch_the_type","text":"switch_the_type(λ::Float64)\n\nReturns the type (which can be used as a key of DefaultPyrometersTypes dict) depending on the wavelengh\nInput:\n    λ - wavelength in μm\n\n\n\n\n\n","category":"method"},{"location":"pyrometers/#RadiationPyrometers.wavelength_number-Tuple{}","page":"RadiationPyrometers","title":"RadiationPyrometers.wavelength_number","text":"wavelength_number()\n\nReturns the length of wavelengths vector covered by the DefaultPyrometersTypes (all default pyrometers wavelengh region)\n\n\n\n\n\n","category":"method"},{"location":"pyrometers/#RadiationPyrometers.wlength-Union{Tuple{Pyrometer{N}}, Tuple{N}} where N","page":"RadiationPyrometers","title":"RadiationPyrometers.wlength","text":"wlength(::Pyrometer{N}) where N\n\nReturns the number of wavelengths\n\n\n\n\n\n","category":"method"},{"location":"#RadiationPyrometers.jl","page":"Home","title":"RadiationPyrometers.jl","text":"","category":"section"},{"location":"#General-description","page":"Home","title":"General description","text":"","category":"section"}]
}
